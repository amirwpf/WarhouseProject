-- Create the item table
CREATE TABLE item (
    Id INT PRIMARY KEY,
    Code INT,
    Name NVARCHAR(255) NOT NULL
);

-- Create the stock table
CREATE TABLE stock (
    Id INT PRIMARY KEY,
    Code INT,
    Name NVARCHAR(255) NOT NULL
);

-- Create the delivery table with a foreign key referencing the stock table
CREATE TABLE delivery (
    Id INT PRIMARY KEY,
    Number INT,
    Date DATETIME NOT NULL,
    stockId INT FOREIGN KEY REFERENCES stock(id)
);

-- Create the deliveryItems table with foreign keys referencing the item and delivery tables
CREATE TABLE deliveryItems (
    Id INT PRIMARY KEY,
    itemId INT FOREIGN KEY REFERENCES item(id),
    DeliveryId INT FOREIGN KEY REFERENCES delivery(id) ON DELETE CASCADE,
    Quantity INT NOT NULL
);

-- Create the receipt table with a foreign key referencing the stock table
CREATE TABLE receipt (
    Id INT PRIMARY KEY,
    Number INT,
    Date DATETIME NOT NULL,
    StockId INT FOREIGN KEY REFERENCES stock(id)
);

-- Create the receiptItem table with foreign keys referencing the item and receipt tables
CREATE TABLE receiptItem (
    Id INT PRIMARY KEY,
    ItemId INT FOREIGN KEY REFERENCES item(id),
    ReceiptId INT FOREIGN KEY REFERENCES receipt(id) ON DELETE CASCADE,
    Quantity INT NOT NULL
);


-- Insert template data
INSERT INTO item  VALUES
    (1,21,'Item 1'),
    (2,22,'Item 2'),
    (3,23,'Item 3');

INSERT INTO stock  VALUES
    (1,32,'Stock A'),
    (2,33,'Stock B'),
    (3,34,'Stock C');

INSERT INTO delivery VALUES
    (1,111,'2024-01-29 10:00:00',1),
    (2,333,'2024-01-30 12:30:00',3);

INSERT INTO deliveryItems  VALUES
    (1,1, 1, 100),
    (2,2, 1, 50),
    (3,1, 2, 75);

INSERT INTO receipt  VALUES
    (1,222,'2024-02-01 14:45:00',2),
    (2,110,'2024-02-02 16:00:00',1);

INSERT INTO receiptItem  VALUES
    (1,3, 1, 200),
    (2,2, 2, 30),
    (3,3, 2, 50);


--CREATE TABLE tableIds (
--    [Id] [int]  PRIMARY KEY,
--    [TableName] [varchar](255) NULL,
--    [IdNumber] [int] 
--	)

--CREATE VIEW receiptStock AS
--SELECT r.Id , r.Number, r.Date , r.StockId ,s.Code StockCode,s.Name StockName
--FROM receipt r
--inner join stock s ON r.StockId=s.Id


--select * from receiptStock;


--CREATE VIEW deliveryStock AS
--SELECT r.Id , r.Number, r.Date , r.StockId ,s.Code StockCode,s.Name StockName
--FROM delivery r
--inner join stock s ON r.StockId=s.Id

--select * from deliveryStock;


--CREATE view Stock_Item_Quantity_View
--AS
--select z.Id,z.Name,SUM(z.sum) as sum
--From
--(
--select s.Id,s.Name,-di.Quantity as sum from deliveryItems di
--inner join delivery d ON d.Id=di.DeliveryId
--inner join stock s ON d.stockId=s.id
--union
--select s.Id,s.Name,ri.Quantity as sum from receiptItem ri
--inner join receipt r ON r.Id=ri.ReceiptId
--inner join stock s ON r.stockId=s.id
--)
--as z
--group by z.Id,z.Name


--select * from Stock_Item_Quantity_View;